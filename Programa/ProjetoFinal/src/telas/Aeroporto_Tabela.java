/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import connection.AeroportoCRUD;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import passagens_aereas.Aeroporto;

/**
 *
 * @author lucas
 */
public class Aeroporto_Tabela extends javax.swing.JDialog {

    /**
     * Creates new form TabelaAeroporto
     *
     * @param parent
     * @param modal
     */
    public Aeroporto_Tabela(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        escreveTabela();
    }

    private void escreveTabela() {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        AeroportoCRUD aeroportoCRUD = new AeroportoCRUD();
        for (Aeroporto a : aeroportoCRUD.buscaTudo()) {
            modelo.addRow(new Object[]{
                a.getRegistro(),
                a.getNome(),
                a.getCidade(),
                a.getEstado()
            });
        }
    }
    
    private int pegaRegistro(){
        int coluna = 0;
        int linha = this.jTable1.getSelectedRow();
        return (Integer) jTable1.getValueAt(linha, coluna);
    }
    private String pegaNome(){
        int coluna = 1;
        int linha = this.jTable1.getSelectedRow();
        return (String) jTable1.getValueAt(linha, coluna);
    }
    private String pegaCidade(){
        int coluna = 2;
        int linha = this.jTable1.getSelectedRow();
        return (String) jTable1.getValueAt(linha, coluna);
    }
    private String pegaEstado(){
        int coluna = 3;
        int linha = this.jTable1.getSelectedRow();
        return (String) jTable1.getValueAt(linha, coluna);
    }
    
    protected void edita(){
        Aeroporto aeroporto = new Aeroporto();
        aeroporto.setRegistro(this.pegaRegistro());
        aeroporto.setNome(this.pegaNome());
        aeroporto.setCidade(this.pegaCidade());
        aeroporto.setEstado(this.pegaEstado());
        this.dispose();
        Aeroporto_Cadastro cadastroAeroporto = new Aeroporto_Cadastro(null, true, aeroporto);
        Aeroporto_Consulta_Atualizacao consulta_Atualizacao = new Aeroporto_Consulta_Atualizacao(null, true);
    }
    
    protected void excui(){
        Aeroporto aeroporto = new Aeroporto();
        aeroporto.setRegistro(this.pegaRegistro());
        aeroporto.setNome(this.pegaNome());
        this.dispose();
        int op = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir o aeroporto " 
                + aeroporto.getNome()
                + "?",null, JOptionPane.YES_NO_OPTION);
        if(op == JOptionPane.OK_OPTION){
            AeroportoCRUD aeroportoCRUD = new AeroportoCRUD();
            aeroportoCRUD.exclusao(aeroporto.getRegistro());
        }
        Aeroporto_Exclusao exclusao = new Aeroporto_Exclusao(null, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 300));
        jScrollPane1.setRequestFocusEnabled(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "Cidade", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
        getContentPane().add(jPanel4, java.awt.BorderLayout.LINE_END);
        getContentPane().add(jPanel5, java.awt.BorderLayout.LINE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
